
package main_process;
import entity.User;
import entity.transaction;
import java.awt.Component;

import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import java.time.LocalDate;

import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import login.login;
import mysql_conection.mysql;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author phuoc
 */
public final class main_process extends javax.swing.JFrame {

    /**
     * Creates new form main_process
     * @param log
     */
    public main_process(login log) {
        initComponents();
        this.log = log;

        try {
            
            customInit();
        } catch (Exception ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
        initUserTable();
        } 
        catch (SQLException ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void initUserTable() throws SQLException{
            String query = "SELECT * FROM member";
            Statement statement = sql.connection.createStatement();
            ResultSet resultSet = statement.executeQuery(query);

            // Step 3: Create a JTable and populate it with the retrieved data
            String[] columnNames = {"ID", "Username", "Password", "Name","Gioi han chi tieu","Quyen"};
            UserTable = new DefaultTableModel(columnNames, 0);
            
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String userName = resultSet.getString("userName");
                String passWord = resultSet.getString("passWord");
                String name = resultSet.getString("name");
//                int privilegeId = resultSet.getInt("privilege_Id");
                int quyen = resultSet.getInt("privilege_Id");
                int gioi_han = resultSet.getInt("gioi_han");
                
                String chucvu;
                
                if (quyen == 1){
                    chucvu = "Quan ly";
                }
                else{
                    chucvu = "Thanh vien";
                }
                Object[] rowData = {id, userName, passWord, name,gioi_han,chucvu};
                UserTable.addRow(rowData);
            }
            resultSet.close();
            statement.close();
            jtUser.setModel(UserTable);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void initGiaoDichChungTable(){
          GiaoDichChungTable = new DefaultTableModel(
                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
        );
    }
     public void inittkIdTable(){
          tkId = new DefaultTableModel(
                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
        );
    }
     public void inittkNgayTable(){
          tkNgay = new DefaultTableModel(
                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
        );
    }
     public void inittkTenTable(){
          tkTen = new DefaultTableModel(
                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
        );
    }
    public void initGiaoDichRiengTable(){
          GiaoDichRiengTable = new DefaultTableModel(
                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
        );
    }
    public void customInit() throws Exception{
        
        GiaoDichRiengTable = new DefaultTableModel(
                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
        );
       
        LocalDate currentDate = LocalDate.now();

        // Define the date format you want ("yyyy-MM-dd" for year, month, and day)
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        // Format the current date as per the defined format
        String formattedDate = currentDate.format(formatter);
        jtextTimeChung.setText(formattedDate);
        jtextIDUserChung.setText(String.valueOf(log.id));
        jlabelTime.setText(formattedDate);
        jlabelUser.setText(log.tk_log);
        
        try {
            
            this.sql = new mysql();
            sta = sql.connection.createStatement();
            
            jdAddUser.setSize(590,519);

            setName("Chuong trinh quan ly");

            setLocationRelativeTo(null);
            jLabel9.setAlignmentX(Component.CENTER_ALIGNMENT);
            
            designGiaoDichChung();
            designGiaoDichRieng();
            designSearchId(log.id);
            designTKNgay("2022-01-01","2024-01-01");
            
            desingBieuDo();
        }           
        catch (ClassNotFoundException | SQLException ex) {
            showMess(ex.getMessage());
        }
        
    }
    
    public String getTime(){
        LocalDate currentDate = LocalDate.now();

        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        
        String formattedDate = currentDate.format(formatter);
          
        return formattedDate;
    }
     public  JFreeChart createChart() throws SQLException {
        JFreeChart barChart = ChartFactory.createBarChart(
                "BIỂU ĐỒ CHI TIÊU CHUNG",
                "Tháng", "Số tiền",
                createDataset(), PlotOrientation.VERTICAL, false, false, false);
        return barChart;
    }

    private  CategoryDataset createDataset() throws SQLException {
        
        int[] moneys = new int[12]; // Assuming you have data for 12 months

         String cau_lenh = "SELECT YEAR(timeDisplay) AS Year, MONTH(timeDisplay) AS Month, " +
                           "COALESCE(SUM(money), 0) AS TotalMoney " +
                           "FROM transaction " +
                           "WHERE YEAR(timeDisplay) = 2023 " +
                           "GROUP BY YEAR(timeDisplay), MONTH(timeDisplay) " +
                           "ORDER BY YEAR(timeDisplay), MONTH(timeDisplay)";

        
         ResultSet resultSet = sta.executeQuery(cau_lenh);

             while (resultSet.next()) {
                 int month = resultSet.getInt("Month");
                 int totalMoney = resultSet.getInt("TotalMoney");
                 // Subtract 1 from month to get 0-based index for the array
                 moneys[month - 1] = totalMoney;
             }
         DefaultCategoryDataset data = new DefaultCategoryDataset();
        for (int i = 0;i<12;i++){
            data.addValue(moneys[i], "Số tiền", "tháng "+String.valueOf(i+1));
        }
//        dataset.addValue(68000000, "Số người", "1990");
//        dataset.addValue(80000000, "Số người", "2000");
//        dataset.addValue(88000000, "Số người", "2010");
//        dataset.addValue(95000000, "Số người", "2020");
        return data;
    }
    
 

    public void desingBieuDo(){
           
            
        try {
            JFreeChart freeChart = createChart();
            chartPanel = new ChartPanel(freeChart);
            jpBieuDo.removeAll();
            jpBieuDo.add(chartPanel);
            jpBieuDo.revalidate();
            jpBieuDo.repaint();
        } catch (SQLException ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
            

            



    }
    
      
        
     
    
 
    public void designGiaoDichChung() throws SQLException{
        initGiaoDichChungTable();
        String sqlQuery = "SELECT * FROM transaction";

            // Prepare the statement
            Statement statement = sql.connection.createStatement();

            // Execute the query and get the result set
            ResultSet resultSet = statement.executeQuery(sqlQuery);

            // Create a DefaultTableModel to store the data
            DefaultTableModel model = GiaoDichChungTable;
            // Add columns to the model (you can customize column headers here)
           
            
            // Loop through the result set and add rows to the model
            while (resultSet.next()) {
                int transactionId = resultSet.getInt("transactionid");
                int money = resultSet.getInt("money");
                Date timeDisplay = resultSet.getDate("timeDisplay");
                String content = resultSet.getString("content");
                int memberId = resultSet.getInt("Member_Id");

                model.addRow(new Object[]{transactionId, money, timeDisplay, content, memberId});
            }

            // Set the model to the JTable
            jtaChun.setModel(model);

            // Close the resources
            resultSet.close();
            statement.close();
    }
      public void designGiaoDichRieng() throws SQLException{
            initGiaoDichRiengTable();
            String sqlQuery = "SELECT * FROM transaction WHERE Member_Id = "+String.valueOf(log.id);

            // Prepare the statement
            Statement statement = sql.connection.createStatement();

            // Execute the query and get the result set
            ResultSet resultSet = statement.executeQuery(sqlQuery);

            // Create a DefaultTableModel to store the data
            DefaultTableModel model = GiaoDichRiengTable;
            // Add columns to the model (you can customize column headers here)
            

            // Loop through the result set and add rows to the model
            while (resultSet.next()) {
                int transactionId = resultSet.getInt("transactionid");
                int money = resultSet.getInt("money");
                Date timeDisplay = resultSet.getDate("timeDisplay");
                String content = resultSet.getString("content");
                int memberId = resultSet.getInt("Member_Id");

                model.addRow(new Object[]{transactionId, money, timeDisplay, content, memberId});
            }

            // Set the model to the JTable
            jtRieng.setModel(model);

            // Close the resources
            resultSet.close();
            statement.close();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdAddUser = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIdUser = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnUserOk = new javax.swing.JButton();
        btnUserCancel = new javax.swing.JButton();
        jlQuyen = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        txtMucCB = new javax.swing.JTextField();
        jpBtn = new javax.swing.JPanel();
        btnTimkiem = new javax.swing.JButton();
        btnThongke = new javax.swing.JButton();
        btnHuongdan = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnGiaoDich = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jpTitle = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jlabelUser = new javax.swing.JLabel();
        jlabelTime = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jpMain = new javax.swing.JPanel();
        jpThemGiaoDich = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jtGDchung = new javax.swing.JScrollPane();
        jtaChun = new javax.swing.JTable();
        jtGDRieng = new javax.swing.JScrollPane();
        jtRieng = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtextIDchung = new javax.swing.JTextField();
        jtextTienChung = new javax.swing.JTextField();
        jtextNoiDungChung = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtextIDUserChung = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jtextTimeChung = new javax.swing.JLabel();
        jpTimKiem = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtTimKiemNgay = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jfmBG = new javax.swing.JFormattedTextField();
        jfmE = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jttkid = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtTKID = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtTKNoidung = new javax.swing.JTextField();
        jbtnTkTen = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtTkTen = new javax.swing.JTable();
        jpThongKe = new javax.swing.JPanel();
        jpBieuDo = new javax.swing.JPanel();
        jpHuongdan = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jpQuanLyUser = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtUser = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        bntAddUser = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jpQuanLyFake = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jdAddUser.setResizable(false);

        jLabel1.setText("ID");

        jLabel2.setText("UserName");

        jLabel3.setText("Password");

        jLabel4.setText("Name");

        jLabel5.setText("Quyền");

        btnUserOk.setText("OK");
        btnUserOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserOkActionPerformed(evt);
            }
        });

        btnUserCancel.setText("Cancel");
        btnUserCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserCancelActionPerformed(evt);
            }
        });

        jlQuyen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Member", "Manager" }));

        jLabel22.setText("Mức cảnh báo($)");

        txtMucCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMucCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jdAddUserLayout = new javax.swing.GroupLayout(jdAddUser.getContentPane());
        jdAddUser.getContentPane().setLayout(jdAddUserLayout);
        jdAddUserLayout.setHorizontalGroup(
            jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdAddUserLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jdAddUserLayout.createSequentialGroup()
                        .addComponent(jlQuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMucCB))
                    .addComponent(txtIdUser)
                    .addComponent(txtUserName)
                    .addComponent(txtPassword)
                    .addComponent(txtName)
                    .addGroup(jdAddUserLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnUserOk, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                        .addComponent(btnUserCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addGap(72, 72, 72))
        );
        jdAddUserLayout.setVerticalGroup(
            jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdAddUserLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jdAddUserLayout.createSequentialGroup()
                        .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77))
                    .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlQuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)
                        .addComponent(txtMucCB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jdAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUserOk)
                    .addComponent(btnUserCancel))
                .addGap(45, 45, 45))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpBtn.setBackground(new java.awt.Color(255, 255, 255));

        btnTimkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search.png"))); // NOI18N
        btnTimkiem.setText("Tìm Kiếm");
        btnTimkiem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        btnThongke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Bar chart.png"))); // NOI18N
        btnThongke.setText("Thống Kê");
        btnThongke.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnThongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongkeActionPerformed(evt);
            }
        });

        btnHuongdan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Address book.png"))); // NOI18N
        btnHuongdan.setText("Hướng Dẫn");
        btnHuongdan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHuongdan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuongdanActionPerformed(evt);
            }
        });

        btn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User.png"))); // NOI18N
        btn5.setText("Tài Khoản");
        btn5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn5.setPreferredSize(new java.awt.Dimension(85, 28));
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Exit.png"))); // NOI18N
        jButton1.setText("OUT");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnGiaoDich.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Notes.png"))); // NOI18N
        btnGiaoDich.setText("Giao dịch");
        btnGiaoDich.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGiaoDich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaoDichActionPerformed(evt);
            }
        });

        jLabel6.setText("   Chức năng");

        javax.swing.GroupLayout jpBtnLayout = new javax.swing.GroupLayout(jpBtn);
        jpBtn.setLayout(jpBtnLayout);
        jpBtnLayout.setHorizontalGroup(
            jpBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnThongke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnGiaoDich, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnHuongdan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnTimkiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBtnLayout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpBtnLayout.setVerticalGroup(
            jpBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHuongdan, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGiaoDich, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jpTitle.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Alarm.png"))); // NOI18N
        jLabel8.setText("Time");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User.png"))); // NOI18N
        jLabel7.setText("User");

        jlabelUser.setText("jLabel15");

        jlabelTime.setText("jLabel16");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jlabelTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel9.setForeground(new java.awt.Color(204, 0, 0));
        jLabel9.setText("                                                                                                                                        Quản lý chi tiêu");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jpTitleLayout = new javax.swing.GroupLayout(jpTitle);
        jpTitle.setLayout(jpTitleLayout);
        jpTitleLayout.setHorizontalGroup(
            jpTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTitleLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpTitleLayout.setVerticalGroup(
            jpTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpTitleLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jpMain.setLayout(new java.awt.CardLayout());

        jpThemGiaoDich.setBackground(new java.awt.Color(255, 255, 255));

        jtaChun.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtGDchung.setViewportView(jtaChun);

        jTabbedPane1.addTab("Chi tiêu chung", jtGDchung);

        jtRieng.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtGDRieng.setViewportView(jtRieng);

        jTabbedPane1.addTab("Chi tiêu cá nhân", jtGDRieng);

        jLabel10.setText("ID");

        jLabel11.setText("Tiền($)");

        jtextNoiDungChung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextNoiDungChungActionPerformed(evt);
            }
        });

        jLabel12.setText("Nội dung");

        jLabel13.setText("ID User");

        jtextIDUserChung.setText("ID");

        jButton7.setText("Thêm");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("Xóa");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel15.setText("Time");

        jtextTimeChung.setText("Time");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtextIDchung, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addComponent(jtextTienChung))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jtextIDUserChung, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                                .addGap(107, 107, 107))
                            .addComponent(jtextNoiDungChung))
                        .addGap(62, 62, 62))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jtextTimeChung, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtextIDchung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtextNoiDungChung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtextTienChung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jtextIDUserChung))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtextTimeChung)
                    .addComponent(jLabel15))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton9))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpThemGiaoDichLayout = new javax.swing.GroupLayout(jpThemGiaoDich);
        jpThemGiaoDich.setLayout(jpThemGiaoDichLayout);
        jpThemGiaoDichLayout.setHorizontalGroup(
            jpThemGiaoDichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpThemGiaoDichLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpThemGiaoDichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpThemGiaoDichLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jTabbedPane1)))
        );
        jpThemGiaoDichLayout.setVerticalGroup(
            jpThemGiaoDichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpThemGiaoDichLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpMain.add(jpThemGiaoDich, "card2");

        jpTimKiem.setBackground(new java.awt.Color(255, 255, 255));

        jtTimKiemNgay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jtTimKiemNgay);

        jLabel17.setText("Từ");

        jLabel18.setText("Đến");

        jButton3.setText("Tìm Kiếm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        try {
            jfmBG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfmBG.setText("2023-04-05");
        jfmBG.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jfmBGPropertyChange(evt);
            }
        });

        try {
            jfmE.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfmE.setText("2023-08-07");
        jfmE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfmEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jfmBG, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jfmE, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jfmBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfmE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButton3))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(292, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Tìm kiếm ngày", jPanel7);

        jttkid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jttkid);

        jLabel16.setText("ID");

        txtTKID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTKIDActionPerformed(evt);
            }
        });

        jButton2.setText("Tìm Kiếm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(txtTKID, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addGap(62, 62, 62))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(261, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTKID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1123, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(310, 310, 310))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        jTabbedPane2.addTab("Tìm kiếm Id", jPanel5);

        jLabel14.setText("Nội dung");

        txtTKNoidung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTKNoidungActionPerformed(evt);
            }
        });

        jbtnTkTen.setText("Tìm Kiếm");
        jbtnTkTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTkTenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(txtTKNoidung, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnTkTen)
                .addGap(135, 135, 135))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTKNoidung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jbtnTkTen)
                .addGap(15, 15, 15))
        );

        jtTkTen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jtTkTen);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(331, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Tìm kiếm nội dung", jPanel6);

        javax.swing.GroupLayout jpTimKiemLayout = new javax.swing.GroupLayout(jpTimKiem);
        jpTimKiem.setLayout(jpTimKiemLayout);
        jpTimKiemLayout.setHorizontalGroup(
            jpTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2))
        );
        jpTimKiemLayout.setVerticalGroup(
            jpTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpMain.add(jpTimKiem, "card3");

        jpThongKe.setBackground(new java.awt.Color(255, 255, 255));

        jpBieuDo.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jpThongKeLayout = new javax.swing.GroupLayout(jpThongKe);
        jpThongKe.setLayout(jpThongKeLayout);
        jpThongKeLayout.setHorizontalGroup(
            jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpThongKeLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jpBieuDo, javax.swing.GroupLayout.PREFERRED_SIZE, 1108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpThongKeLayout.setVerticalGroup(
            jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpThongKeLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jpBieuDo, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpMain.add(jpThongKe, "card4");

        jpHuongdan.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("\t\t\t\t\n\n\n\n\n\t\t\t\t\t\tHƯỚNG DẪN\n\n\n\t\tChương trình quản lý chi tiêu gia đình giúp gia đình quản lý tình hình chi tiêu tài chính, giúp dễ dàng hơn trong việc ghi lại những khoản chi tiêu.\n\n\n\t\tPhần mềm gồm các chức năng chính như sau:\n\n\t\t\t\n\t\t\tGiao dịch: Chức năng quan trọng nhất của ứng dụng, dùng để nhập chi tiêu\n\n\t\t\t\t\t\n\t\t\tThống kê: Giúp người dùng có cái nhìn chung nhất về tài chính gia đình\n\n\t\t\t\n\t\t\tTìm Kiếm: Giúp người dùng có thể xem được chi tiêu của mình và mọi người. Có 2 cách tìm kiếm là theo ngày và theo id thành viên\n\n\t\t\t\n\t\t\tQuản lý tài khoản: Giúp người dùng có thể xem được tài khoản của các thành viên trong gia đình\n\n\t\t\t\n\n\t\t\t");
        jScrollPane4.setViewportView(jTextArea1);

        javax.swing.GroupLayout jpHuongdanLayout = new javax.swing.GroupLayout(jpHuongdan);
        jpHuongdan.setLayout(jpHuongdanLayout);
        jpHuongdanLayout.setHorizontalGroup(
            jpHuongdanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHuongdanLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpHuongdanLayout.setVerticalGroup(
            jpHuongdanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        jpMain.add(jpHuongdan, "card5");

        jpQuanLyUser.setBackground(new java.awt.Color(255, 255, 255));

        jtUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                //        {null, null, null, null},
                //        {null, null, null, null},
                //        {null, null, null, null},
                //        {null, null, null, null}
            },
            new String [] {
                "Id", "Tài khoản ", "Mật khẩu","Tên"
            }
        ));
        jScrollPane1.setViewportView(jtUser);

        bntAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Accept.png"))); // NOI18N
        bntAddUser.setText("Thêm");
        bntAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAddUserActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Delete.png"))); // NOI18N
        jButton5.setText("Xóa");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Edit.png"))); // NOI18N
        jButton4.setText("Sửa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(bntAddUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntAddUser)
                    .addComponent(jButton5)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jpQuanLyUserLayout = new javax.swing.GroupLayout(jpQuanLyUser);
        jpQuanLyUser.setLayout(jpQuanLyUserLayout);
        jpQuanLyUserLayout.setHorizontalGroup(
            jpQuanLyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpQuanLyUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1123, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpQuanLyUserLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpQuanLyUserLayout.setVerticalGroup(
            jpQuanLyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpQuanLyUserLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        jpMain.add(jpQuanLyUser, "card6");

        jLabel20.setText("Bạn không có quyền xem");

        javax.swing.GroupLayout jpQuanLyFakeLayout = new javax.swing.GroupLayout(jpQuanLyFake);
        jpQuanLyFake.setLayout(jpQuanLyFakeLayout);
        jpQuanLyFakeLayout.setHorizontalGroup(
            jpQuanLyFakeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpQuanLyFakeLayout.createSequentialGroup()
                .addContainerGap(591, Short.MAX_VALUE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(388, 388, 388))
        );
        jpQuanLyFakeLayout.setVerticalGroup(
            jpQuanLyFakeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpQuanLyFakeLayout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLabel20)
                .addContainerGap(263, Short.MAX_VALUE))
        );

        jpMain.add(jpQuanLyFake, "card7");

        jMenu1.setText("File");

        jMenu3.setText("jMenu3");
        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jpTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpMain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.log.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnGiaoDichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaoDichActionPerformed
      jpMain.removeAll();
      jpMain.add(jpThemGiaoDich);

        jpMain.revalidate();
        jpMain.repaint();
        jtextIDUserChung.setText(String.valueOf(log.id));
        
       
        
      
        checkCanhBao();
      
    }//GEN-LAST:event_btnGiaoDichActionPerformed
    public void checkCanhBao(){
        try {
             String formattedDate = getTime();
            String begin = formattedDate.substring(0,7)+("-01");
            String end = formattedDate.substring(0,7)+("-31");
            int money = getSumMoney(begin, end, log.id);
            
            if(money>log.canh_bao){
                
                showMess("Ban đã vượt giới hạn chi tiết tháng này "+String.valueOf(money)+"/"+String.valueOf(log.canh_bao)+" vui lòng tiết kiệm!");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnThongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongkeActionPerformed
        jpMain.removeAll();
      jpMain.add(jpThongKe);

        jpMain.revalidate();
        jpMain.repaint();
        desingBieuDo();
        
       
    }//GEN-LAST:event_btnThongkeActionPerformed

    private void btnHuongdanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuongdanActionPerformed
        // TODO add your handling code here:
         jpMain.removeAll();
      jpMain.add(jpHuongdan);

        jpMain.revalidate();
        jpMain.repaint();
    }//GEN-LAST:event_btnHuongdanActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        try {
            
            // TODO add your handling code here:
            jpMain.removeAll();
            if(log.quyen == 1){
                jpMain.add(jpQuanLyUser);
            }
            else{
                jpMain.add(jpQuanLyFake);
            }
            
            jpMain.revalidate();
            jpMain.repaint();
            initUserTable();
        } catch (SQLException ex) {
            showMess(ex.getMessage());
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btnUserOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserOkActionPerformed
            
        try {
           
            
            String userName = txtUserName.getText();
            int id = Integer.parseInt(txtIdUser.getText());
            String name = txtName.getText();
            int quyen = jlQuyen.getSelectedIndex();
            int muc_canh_bao = Integer.parseInt(txtMucCB.getText());

            String password = txtPassword.getText();
            User user = new User(id, userName, password, name, muc_canh_bao, quyen);
            if (sua == false) {

                this.sql.insertUser(user);

            } else {

                this.sql.updateMember(user);

            }

            txtUserName.setText("");
            txtIdUser.setText("");
            txtName.setText("");
            txtPassword.setText("");
            txtMucCB.setText("");
            jdAddUser.setVisible(false);
            showMess("Succes!");
            initUserTable();

        } catch (Exception e) {

            showMess(e.getMessage());

        }


    }//GEN-LAST:event_btnUserOkActionPerformed

    private void bntAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAddUserActionPerformed
        // TODO add your handling code here:
        sua = false;
        txtIdUser.setEditable(true );
        jdAddUser.setVisible(true);
        
    }//GEN-LAST:event_bntAddUserActionPerformed

    private void btnUserCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserCancelActionPerformed
        // TODO add your handling code here:
                    txtUserName.setText("");
                    txtIdUser.setText("");
                    txtName.setText("");
                    txtPassword.setText("");
              
                    jdAddUser.setVisible(false);
    }//GEN-LAST:event_btnUserCancelActionPerformed

    private void jtextNoiDungChungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextNoiDungChungActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtextNoiDungChungActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String statament = "";
          // Determine which JTable is currently visible based on the selected index
        JTable table = jtUser;
        
        
       
        
        int selectedRow = table.getSelectedRow();

        if (selectedRow != -1) {
                int Id = (int) table.getValueAt(selectedRow, 0);
                if ( "admin".equals((String) table.getValueAt(selectedRow, 1))){
                    showMess("Khong the xoa tk admin");
                    return ;
                }
                String sqlQuery = "DELETE FROM member WHERE id = ?";

                // Prepare the statement
                PreparedStatement preparedStatement;
                
                try {

                    preparedStatement = sql.connection.prepareStatement(sqlQuery);

                    preparedStatement.setInt(1, Id);
                    

                    // Execute the query to delete the row
                    int rowsAffected = preparedStatement.executeUpdate();

                    // Close the resources
                    preparedStatement.close();

                    if (rowsAffected > 0) {
                        // If the row was deleted successfully in the database, also remove it from the JTable
                        DefaultTableModel model = (DefaultTableModel) table.getModel();
                        model.removeRow(selectedRow);



                    }
                } catch (SQLException ex) {
                    Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if(log.quyen==0){
            showMess("Ban khong co quyen xoa");
            return;
        }
        Component selectedComponent = jTabbedPane1.getSelectedComponent();

        // Determine which JTable is currently visible based on the selected index
        JTable table = null;
        
        
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        
        if (selectedIndex == 0) {
            table = jtaChun;
            
        }
            
        else  {
            table = jtRieng;
            
        }
        
        int selectedRow = table.getSelectedRow();
        System.out.println(selectedRow+" "+selectedComponent);
        if (selectedRow != -1) {
            int Id = (int) table.getValueAt(selectedRow, 0);

            
                // Replace these values with your database credentials
                
                // Create the SQL query to delete the row with the specified transactionId
                String sqlQuery = "DELETE FROM transaction WHERE transactionid = ?";

                // Prepare the statement
                PreparedStatement preparedStatement;
                
            try {
                
                preparedStatement = sql.connection.prepareStatement(sqlQuery);
                
                preparedStatement.setInt(1, Id);

                // Execute the query to delete the row
                int rowsAffected = preparedStatement.executeUpdate();

                // Close the resources
                preparedStatement.close();
                   
                if (rowsAffected > 0) {
                    // If the row was deleted successfully in the database, also remove it from the JTable
                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.removeRow(selectedRow);
                        if (selectedIndex == 0) {
                            designGiaoDichRieng();
                                
                        }

                        else  {
                            designGiaoDichRieng();

                        }
        
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txtTKNoidungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTKNoidungActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTKNoidungActionPerformed

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
       
        try {
             jpMain.removeAll();
            jpMain.add(jpTimKiem);

            jpMain.revalidate();
            jpMain.repaint();
            designTKNgay("2022-01-01", "2024-01-01");
            designSearchId(-1);
            String content = txtTKNoidung.getText();
            designTKNoiDung(content);
        } catch (Exception ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void txtTKIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTKIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTKIDActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try {
            String text = txtTKID.getText();
            if("".equals(text)){
                jttkid.setModel(GiaoDichChungTable);
                return;
            }
            int id = Integer.parseInt(text);
            designSearchId(id);
            txtTKID.setText("");
        } catch (Exception ex) {
            showMess(ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        
        
        
        
        try {
            String content = jtextNoiDungChung.getText();
      
        
            int IdUser = Integer.parseInt(jtextIDUserChung.getText());

            String time = jtextTimeChung.getText();

            int tien = Integer.parseInt(jtextTienChung.getText());
            int Id =Integer.parseInt(jtextIDchung.getText());

            transaction gd = new transaction(Id, tien, time, content, IdUser);
            sql.insertTransaction(gd);
            designGiaoDichChung();
            designGiaoDichRieng();
            jtextNoiDungChung.setText("");
            jtextTienChung.setText("");
            jtextIDchung.setText("");
           
        } catch (SQLException | NumberFormatException ex) {
            
            showMess(ex.getMessage());
            
        }
        checkCanhBao();
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

       String begin_time = jfmBG.getText();
       String end_time = jfmE.getText();
        designTKNgay(begin_time, end_time);
     
                
                
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jfmBGPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jfmBGPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jfmBGPropertyChange

    private void jfmEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfmEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfmEActionPerformed

    private void jbtnTkTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTkTenActionPerformed
        String content = txtTKNoidung.getText();
        designTKNoiDung(content);
        txtTKNoidung.setText("");
        
    }//GEN-LAST:event_jbtnTkTenActionPerformed

    private void txtMucCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMucCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMucCBActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        sua = true;
        if (jtUser.getSelectedColumn() != -1){
            int selectedRow = jtUser.getSelectedRow();

            Object value_int = jtUser.getValueAt(selectedRow, 0);
            txtIdUser.setText(String.valueOf(value_int));
            txtIdUser.setEditable(false);
          

            Object value_user = jtUser.getValueAt(selectedRow, 1);
            txtUserName.setText( String.valueOf(value_user));
            if("admin".equals(String.valueOf(value_user))){
                showMess("Không thể sửa tài khoản admin");
                return;
            }

            String passWord1 = String.valueOf(jtUser.getValueAt(selectedRow, 2));
            txtPassword.setText(passWord1);

            String name1 = (String) jtUser.getValueAt(selectedRow, 3);
            txtName.setText(name1);

            int gioi_ham1 = Integer.parseInt(String.valueOf(jtUser.getValueAt(selectedRow, 4)));
            txtMucCB.setText(String.valueOf(gioi_ham1));

            String value_quyen = (String) jtUser.getValueAt(selectedRow, 5);

            int quyen1 = "Thanh vien".equals(value_quyen) ? 0 : 1;
            jlQuyen.setSelectedIndex(quyen1);

            

            jdAddUser.setVisible(true);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

      
public void designTKNoiDung(String content) {
    if ("".equals(content)) {
        jtTkTen.setModel(GiaoDichChungTable);
    } else {
        try {
            content = "%" + content + "%";
            inittkTenTable();
            String sqlQuery = "SELECT * FROM transaction WHERE content LIKE ?";

            // Prepare the statement
            PreparedStatement preparedStatement;

            DefaultTableModel model = tkTen;

            preparedStatement = sql.connection.prepareStatement(sqlQuery);
            preparedStatement.setString(1, content);

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                int transactionId = resultSet.getInt("transactionid");
                int money = resultSet.getInt("money");
                Date timeDisplay = resultSet.getDate("timeDisplay");
                String ct = resultSet.getString("content");
                int memberId = resultSet.getInt("Member_Id");

                model.addRow(new Object[]{transactionId, money, timeDisplay, ct, memberId});
            }

            jtTkTen.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

    public void showMess(String s){
     JOptionPane.showMessageDialog(null, s);
}


public void designSearchId(int id) throws SQLException, Exception {
    if(id== -1){
        jttkid.setModel(GiaoDichChungTable);
        return;
    }
    String sqlQuery = "SELECT * FROM transaction WHERE Member_Id =" + String.valueOf(id);

    try (Statement stmt = sql.connection.createStatement();
         ResultSet resultSet = stmt.executeQuery(sqlQuery)) {

        // Initialize the table model once before adding rows to it
        inittkIdTable();
        DefaultTableModel model = tkId;


        while (resultSet.next()) {
            int transactionId = resultSet.getInt("transactionid");
            int money = resultSet.getInt("money");
            Date timeDisplay = resultSet.getDate("timeDisplay");
            String content = resultSet.getString("content");
            int memberId = resultSet.getInt("Member_Id");

            model.addRow(new Object[]{transactionId, money, timeDisplay, content, memberId});
        }

        // Set the model to the JTable
        jttkid.setModel(model);
     } catch (SQLException e) {
        throw e;
    }

}
//public void inittkIdTable(){
//          tkId = new DefaultTableModel(
//                new Object[]{"Transaction ID", "Money", "Time Display", "Content", "Member ID"}, 0
//        );
//    }
public void designSearchTen(String ten) throws SQLException, Exception {
    if("".equals(ten)){
        jttkid.setModel(GiaoDichChungTable);
        return ;
    }
    String sqlQuery = "SELECT * FROM transaction WHERE transactionid =" + ten;

    try (Statement stmt = sql.connection.createStatement();
         ResultSet resultSet = stmt.executeQuery(sqlQuery)) {

        // Initialize the table model once before adding rows to it
        inittkIdTable();
        DefaultTableModel model = tkId;

        while (resultSet.next()) {
            int transactionId = resultSet.getInt("transactionid");
            int money = resultSet.getInt("money");
            Date timeDisplay = resultSet.getDate("timeDisplay");
            String content = resultSet.getString("content");
            int memberId = resultSet.getInt("Member_Id");

            model.addRow(new Object[]{transactionId, money, timeDisplay, content, memberId});
        }

        // Set the model to the JTable
        jttkid.setModel(model);
     } catch (SQLException e) {
        throw e;
    }

}
public int getSumMoney(String startDate, String endDate,int id) throws SQLException {
    String query = "SELECT SUM(money) AS total_money FROM transaction WHERE timeDisplay BETWEEN ? AND ? AND Member_Id = ?";

    
        
         
        PreparedStatement preparedStatement = sql.connection.prepareStatement(query) ;

        // Set the start and end dates as parameters in the prepared statement
        preparedStatement.setString(1, startDate);
        preparedStatement.setString(2, endDate);
        preparedStatement.setInt(3, id);
        
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                return resultSet.getInt("total_money");
            }
            else {
                
                return 0;
            }
}
public int getSumMoney(String startDate, String endDate) throws SQLException {
    String query = "SELECT SUM(money) AS total_money FROM transaction WHERE timeDisplay BETWEEN ? AND ?";

    
         
         
        PreparedStatement preparedStatement = sql.connection.prepareStatement(query) ;

        // Set the start and end dates as parameters in the prepared statement
        preparedStatement.setString(1, startDate);
        preparedStatement.setString(2, endDate);

        
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                return resultSet.getInt("total_money");
            }
            else {
                
                return 0;
            }
        
       
    
}






public void designTKNgay(String BD,String KT){
    
        inittkNgayTable();
        String sqlQuery = "select * from transaction where timeDisplay between ? and ?";

                // Prepare the statement
        PreparedStatement preparedStatement;
        
        DefaultTableModel model = tkNgay;
         
        try {
                preparedStatement = sql.connection.prepareStatement(sqlQuery);
                preparedStatement.setString(1,BD);
                preparedStatement.setString(2, KT);
                ResultSet resultSet = preparedStatement.executeQuery();

                while(resultSet.next()){

                    int transactionId = resultSet.getInt("transactionid");
                    int money = resultSet.getInt("money");
                    Date timeDisplay = resultSet.getDate("timeDisplay");
                    String content = resultSet.getString("content");
                    int memberId = resultSet.getInt("Member_Id");

                    model.addRow(new Object[]{transactionId, money, timeDisplay, content, memberId});
                
                }
                
                jtTimKiemNgay.setModel(model);
        }


        catch (SQLException ex) {
            Logger.getLogger(main_process.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}

public boolean  sua;
public mysql sql;
public login log;
public DefaultTableModel UserTable;
public DefaultTableModel GiaoDichChungTable;
public DefaultTableModel GiaoDichRiengTable;
public DefaultTableModel tkId;
public DefaultTableModel tkTen;
public DefaultTableModel tkNgay;
public static Statement sta;
ChartPanel chartPanel ;
 DefaultCategoryDataset dataset ;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAddUser;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btnGiaoDich;
    private javax.swing.JButton btnHuongdan;
    private javax.swing.JButton btnThongke;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnUserCancel;
    private javax.swing.JButton btnUserOk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbtnTkTen;
    private javax.swing.JDialog jdAddUser;
    private javax.swing.JFormattedTextField jfmBG;
    private javax.swing.JFormattedTextField jfmE;
    private javax.swing.JComboBox<String> jlQuyen;
    private javax.swing.JLabel jlabelTime;
    private javax.swing.JLabel jlabelUser;
    private javax.swing.JPanel jpBieuDo;
    private javax.swing.JPanel jpBtn;
    private javax.swing.JPanel jpHuongdan;
    private javax.swing.JPanel jpMain;
    private javax.swing.JPanel jpQuanLyFake;
    private javax.swing.JPanel jpQuanLyUser;
    private javax.swing.JPanel jpThemGiaoDich;
    private javax.swing.JPanel jpThongKe;
    private javax.swing.JPanel jpTimKiem;
    private javax.swing.JPanel jpTitle;
    private javax.swing.JScrollPane jtGDRieng;
    private javax.swing.JScrollPane jtGDchung;
    private javax.swing.JTable jtRieng;
    private javax.swing.JTable jtTimKiemNgay;
    private javax.swing.JTable jtTkTen;
    private javax.swing.JTable jtUser;
    private javax.swing.JTable jtaChun;
    private javax.swing.JLabel jtextIDUserChung;
    private javax.swing.JTextField jtextIDchung;
    private javax.swing.JTextField jtextNoiDungChung;
    private javax.swing.JTextField jtextTienChung;
    private javax.swing.JLabel jtextTimeChung;
    private javax.swing.JTable jttkid;
    private javax.swing.JTextField txtIdUser;
    private javax.swing.JTextField txtMucCB;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtTKID;
    private javax.swing.JTextField txtTKNoidung;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}





